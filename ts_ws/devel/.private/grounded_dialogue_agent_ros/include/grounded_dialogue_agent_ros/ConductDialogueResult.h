// Generated by gencpp from file grounded_dialogue_agent_ros/ConductDialogueResult.msg
// DO NOT EDIT!


#ifndef GROUNDED_DIALOGUE_AGENT_ROS_MESSAGE_CONDUCTDIALOGUERESULT_H
#define GROUNDED_DIALOGUE_AGENT_ROS_MESSAGE_CONDUCTDIALOGUERESULT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace grounded_dialogue_agent_ros
{
template <class ContainerAllocator>
struct ConductDialogueResult_
{
  typedef ConductDialogueResult_<ContainerAllocator> Type;

  ConductDialogueResult_()
    : command_type()
    , object_location()
    , destination_location()
    , object_id()  {
    }
  ConductDialogueResult_(const ContainerAllocator& _alloc)
    : command_type(_alloc)
    , object_location(_alloc)
    , destination_location(_alloc)
    , object_id(_alloc)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _command_type_type;
  _command_type_type command_type;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _object_location_type;
  _object_location_type object_location;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _destination_location_type;
  _destination_location_type destination_location;

   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _object_id_type;
  _object_id_type object_id;





  typedef boost::shared_ptr< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> const> ConstPtr;

}; // struct ConductDialogueResult_

typedef ::grounded_dialogue_agent_ros::ConductDialogueResult_<std::allocator<void> > ConductDialogueResult;

typedef boost::shared_ptr< ::grounded_dialogue_agent_ros::ConductDialogueResult > ConductDialogueResultPtr;
typedef boost::shared_ptr< ::grounded_dialogue_agent_ros::ConductDialogueResult const> ConductDialogueResultConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace grounded_dialogue_agent_ros

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'grounded_dialogue_agent_ros': ['/home/tracy/catkin_ws/devel/.private/grounded_dialogue_agent_ros/share/grounded_dialogue_agent_ros/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "f45bd961ad31a246c98f75305c1b0442";
  }

  static const char* value(const ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xf45bd961ad31a246ULL;
  static const uint64_t static_value2 = 0xc98f75305c1b0442ULL;
};

template<class ContainerAllocator>
struct DataType< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "grounded_dialogue_agent_ros/ConductDialogueResult";
  }

  static const char* value(const ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# Result\n\
string command_type\n\
string object_location\n\
string destination_location\n\
string object_id\n\
";
  }

  static const char* value(const ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.command_type);
      stream.next(m.object_location);
      stream.next(m.destination_location);
      stream.next(m.object_id);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ConductDialogueResult_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::grounded_dialogue_agent_ros::ConductDialogueResult_<ContainerAllocator>& v)
  {
    s << indent << "command_type: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.command_type);
    s << indent << "object_location: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.object_location);
    s << indent << "destination_location: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.destination_location);
    s << indent << "object_id: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.object_id);
  }
};

} // namespace message_operations
} // namespace ros

#endif // GROUNDED_DIALOGUE_AGENT_ROS_MESSAGE_CONDUCTDIALOGUERESULT_H
